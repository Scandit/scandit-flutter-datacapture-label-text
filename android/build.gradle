def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: 'com.android.library'

android {
    if (project.android.hasProperty("namespace")) {
        sourceSets {
            main {
                manifest.srcFile "src/main/AndroidManifestNew.xml" // no package on it
            }
        }
        namespace "com.scandit.datacapture.flutter.label_text"
    }
    compileSdkVersion safeExtGet("compileSdkVersion", 33)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", 23)
        targetSdkVersion safeExtGet("targetSdkVersion", 33)
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    if (findProject(":native:libs:sdc:label-text-models:sdc-label-text-models-android") != null) {
        api(project(path: ":native:libs:sdc:label-text-models:sdc-label-text-models-android"))
    } else {
        def sdk_version = "7.4.2"

        println("Version of the native sdk used in this build: ${safeExtGet('global_sdk_version', sdk_version)}")
        api "com.scandit.datacapture:label-text-models:${safeExtGet('global_sdk_version', sdk_version)}"
    }
}
